{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/aarshpatel/Desktop/jsk-website/components/Navbar.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport logo from '../public/logo.svg';\n\nconst navLinks = [\n  { name: 'Home', href: '/' },\n  { name: 'Services', href: '/services' },\n  { name: 'Pricing', href: '/pricing' },\n  { name: 'Contact', href: '/contact' },\n];\n\nexport default function Navbar() {\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  return (\n    <nav className=\"w-full fixed top-0 z-50 bg-transparent\">\n      <div className=\"max-w-screen-xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Left: Desktop links */}\n          <div className=\"flex-1 flex items-center\">\n            <div className=\"hidden lg:flex lg:space-x-8\">\n              {navLinks.map((link) => (\n                <Link\n                  key={link.name}\n                  href={link.href}\n                  className=\"text-white hover:underline\"\n                >\n                  {link.name}\n                </Link>\n              ))}\n            </div>\n          </div>\n\n          {/* Center: Logo */}\n          <div className=\"flex-shrink-0\">\n            <Link href=\"/\">\n              <Image\n                src={logo}\n                alt=\"JSK Threading & Body Wax\"\n                priority\n                width={100}\n                height={40}\n              />\n            </Link>\n          </div>\n\n          {/* Right: Desktop button & Mobile toggle */}\n          <div className=\"flex-1 flex items-center justify-end\">\n            {/* Desktop Button */}\n            <div className=\"hidden lg:block\">\n              <Link href=\"/book\">\n                <button className=\"bg-[#YOUR_BRAND_HEX] text-white font-semibold px-4 py-2 rounded-full shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition\">\n                  Book Appointment\n                </button>\n              </Link>\n            </div>\n\n            {/* Mobile menu button */}\n            <div className=\"lg:hidden ml-4\">\n              <button\n                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n                className=\"inline-flex items-center justify-center p-2 rounded-md text-white focus:outline-none\"\n              >\n                {mobileMenuOpen ? (\n                  <svg\n                    className=\"h-6 w-6\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  </svg>\n                ) : (\n                  <svg\n                    className=\"h-6 w-6\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M4 6h16M4 12h16M4 18h16\"\n                    />\n                  </svg>\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Menu Panel */}\n      {mobileMenuOpen && (\n        <div className=\"lg:hidden bg-transparent p-4 space-y-2\">\n          {navLinks.map((link) => (\n            <Link\n              key={link.name}\n              href={link.href}\n              className=\"block text-white text-lg\"\n            >\n              {link.name}\n            </Link>\n          ))}\n          <Link href=\"/book\">\n            <button className=\"w-full bg-[#YOUR_BRAND_HEX] text-white font-semibold px-4 py-2 rounded-full shadow-md hover:shadow-lg transform hover:-translate-y-0.5 transition\">\n              Book Appointment\n            </button>\n          </Link>\n        </div>\n      )}\n    </nav>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;;;AAJA;;;;;AAOA,MAAM,WAAW;IACf;QAAE,MAAM;QAAQ,MAAM;IAAI;IAC1B;QAAE,MAAM;QAAY,MAAM;IAAY;IACtC;QAAE,MAAM;QAAW,MAAM;IAAW;IACpC;QAAE,MAAM;QAAW,MAAM;IAAW;CACrC;AAEc,SAAS;;IACtB,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;wCAEH,MAAM,KAAK,IAAI;wCACf,WAAU;kDAET,KAAK,IAAI;uCAJL,KAAK,IAAI;;;;;;;;;;;;;;;sCAWtB,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;0CACT,cAAA,6LAAC,gIAAA,CAAA,UAAK;oCACJ,KAAK;oCACL,KAAI;oCACJ,QAAQ;oCACR,OAAO;oCACP,QAAQ;;;;;;;;;;;;;;;;sCAMd,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;kDACT,cAAA,6LAAC;4CAAO,WAAU;sDAA6I;;;;;;;;;;;;;;;;8CAOnK,6LAAC;oCAAI,WAAU;8CACb,cAAA,6LAAC;wCACC,SAAS,IAAM,kBAAkB,CAAC;wCAClC,WAAU;kDAET,+BACC,6LAAC;4CACC,WAAU;4CACV,MAAK;4CACL,QAAO;4CACP,SAAQ;4CACR,OAAM;sDAEN,cAAA,6LAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAa;gDACb,GAAE;;;;;;;;;;iEAIN,6LAAC;4CACC,WAAU;4CACV,MAAK;4CACL,QAAO;4CACP,SAAQ;4CACR,OAAM;sDAEN,cAAA,6LAAC;gDACC,eAAc;gDACd,gBAAe;gDACf,aAAa;gDACb,GAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAWjB,gCACC,6LAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,qBACb,6LAAC,+JAAA,CAAA,UAAI;4BAEH,MAAM,KAAK,IAAI;4BACf,WAAU;sCAET,KAAK,IAAI;2BAJL,KAAK,IAAI;;;;;kCAOlB,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;kCACT,cAAA,6LAAC;4BAAO,WAAU;sCAAoJ;;;;;;;;;;;;;;;;;;;;;;;AAQlL;GA9GwB;KAAA","debugId":null}}]
}